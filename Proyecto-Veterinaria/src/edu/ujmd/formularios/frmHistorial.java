/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ujmd.formularios;
import edu.ujmd.veterinaria.controladores.ClientesJpaController;
import edu.ujmd.veterinaria.controladores.EmpleadosJpaController;
import edu.ujmd.veterinaria.controladores.HistorialmedicoJpaController;
import edu.ujmd.veterinaria.controladores.MascotasJpaController;
import edu.ujmd.veterinaria.controladores.VacunasJpaController;
import edu.ujmd.veterinaria.entidades.Clientes;
import edu.ujmd.veterinaria.entidades.Empleados;
import edu.ujmd.veterinaria.entidades.Historialmedico;
import edu.ujmd.veterinaria.entidades.Mascotas;
import edu.ujmd.veterinaria.entidades.Vacunas;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author meev9
 */
public class frmHistorial extends javax.swing.JFrame {
    
    //Conectamos a la base de datos
    HistorialmedicoJpaController controlhis = new HistorialmedicoJpaController();
    EmpleadosJpaController controlemp = new EmpleadosJpaController();
    MascotasJpaController controlma = new MascotasJpaController();
    VacunasJpaController controlva = new VacunasJpaController(); 
    
     //Entidades
    Historialmedico entihi = new Historialmedico();
    Empleados entiem = new Empleados();
    Mascotas entima = new Mascotas();
    Vacunas entiva = new Vacunas();
    
    
     public void cargar() {
        entima.setCodMascotas(cboMascotas.getSelectedIndex() + 1);
        entihi.setCodMascotas(entima);
        entiva.setCodVacunas(cboVacunas.getSelectedIndex() + 1);
        entihi.setCodVacunas(entiva);
        entiem.setCodEmpleados(cboEmpleados.getSelectedIndex() + 1);
        entihi.setCodEmpleados(entiem);
        entihi.setFecha(this.txtFecha.getText());
        entihi.setMotivo(this.txtMotivo.getText());

    }

    public void limpiar() {
        this.lblcodigo.setText("Generado Automaticamente");
        this.cboMascotas.setSelectedIndex(0);
        this.cboVacunas.setSelectedIndex(0);
        this.cboEmpleados.setSelectedIndex(0);
        this.txtFecha.setText("");
        this.txtMotivo.setText("");
    }
    
     public void llenarTabla() {
        String col[] = {"ID", "MASCOTAS", "VACUNAS", "EMPLEADOS","FECHA","MOTIVO"};
        DefaultTableModel modelo = new DefaultTableModel(col, 0);
        Object[] obj = new Object[6];
        List ls;

        try {
            ls = controlhis.findHistorialmedicoEntities();
            for (int i = 0; i < ls.size(); i++) {
                    entihi = (Historialmedico) ls.get(i);
                obj[0] = entihi.getCodHistorial();
                obj[1] = entihi.getCodMascotas().getNombre();
                obj[2] = entihi.getCodVacunas().getNomVacuna();
                obj[3] = entihi.getCodEmpleados().getNombre();
                obj[4] = entihi.getFecha();
                obj[5] = entihi.getMotivo();

                modelo.addRow(obj);
            }
            this.tablamedico.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al llenar tabla de datos : " + e.getMessage());
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     
     public frmHistorial() {
        initComponents();
        llenarComboMascotas();
        llenarComboVacunas();
        llenarComboEmpleados();
        llenarTabla();
    }
     List litsMascotas = null;
     List litsEmpleado = null;
     List litsVacunas = null;
     
      public void llenarComboMascotas() {
        try {
            litsMascotas = controlma.findMascotasEntities();
            for (int i = 0; i < litsMascotas.size(); i++) {
                entima = (Mascotas) litsMascotas.get(i);
                cboMascotas.addItem(entima.getNombre());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos : " + e.getMessage());
        }
    }
      
       public void llenarComboVacunas() {
        try {
            litsVacunas = controlva.findVacunasEntities();
            for (int i = 0; i < litsVacunas.size(); i++) {
                entiva = (Vacunas) litsVacunas.get(i);
                cboVacunas.addItem(entiva.getNomVacuna());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos : " + e.getMessage());
        }
    }
        public void llenarComboEmpleados() {
        try {
            litsEmpleado = controlemp.findEmpleadosEntities();
            for (int i = 0; i < litsEmpleado.size(); i++) {
                entiem = (Empleados) litsEmpleado.get(i);
                cboEmpleados.addItem(entiem.getNombre());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos : " + e.getMessage());
        }
    }
      
        public int buscarComboMascotas(String depto) {
        int index = 0;
        try {
            for (int i = 0; i < litsMascotas.size(); i++) {
                entima = (Mascotas) litsMascotas.get(i);
                if (entima.getCodMascotas().equals(depto)) {
                    index = i;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos : " + e.getMessage());
        }
        return index;
    }
        public int buscarComboVacunas(String depto) {
        int index = 0;
        try {
            for (int i = 0; i < litsVacunas.size(); i++) {
                entiva = (Vacunas) litsVacunas.get(i);
                if (entiva.getCodVacunas().equals(depto)) {
                    index = i;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos : " + e.getMessage());
        }
        return index;
    }
        
        public int buscarComboEmpleados(String dep) {
        int index = 0;
        try {
            for (int i = 0; i < litsEmpleado.size(); i++) {
                entiem = (Empleados) litsEmpleado.get(i);
                if (entiem.getCodEmpleados().equals(dep)) {
                    index = i;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos : " + e.getMessage());
        }
        return index;
    }

       
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboMascotas = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablamedico = new javax.swing.JTable();
        cboVacunas = new javax.swing.JComboBox<>();
        txtEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        lblcodigo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnModifica = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboEmpleados = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtMotivo = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        btnVolver2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setText("FECHA Y HORA");

        jLabel3.setText("VACUNAS");

        tablamedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablamedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablamedicoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablamedico);

        cboVacunas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboVacunasActionPerformed(evt);
            }
        });

        txtEliminar.setText("Eliminar");
        txtEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel2.setText("MASCOTA");

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        lblcodigo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblcodigo.setText("Se genera automaticamente");

        jLabel4.setText("CODIGO");

        btnModifica.setText("Modificar");
        btnModifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("HISTORIAL MEDICO");

        jTextField1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel5.setText("EMPLEADOS");

        jLabel7.setText("MOTIVO");

        btnVolver2.setText("Volver al menu");
        btnVolver2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cboEmpleados, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboVacunas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboMascotas, javax.swing.GroupLayout.Alignment.TRAILING, 0, 178, Short.MAX_VALUE)
                                .addComponent(txtMotivo, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtFecha))
                            .addComponent(lblcodigo))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(btnGuardar)
                                .addGap(58, 58, 58)
                                .addComponent(btnModifica)
                                .addGap(70, 70, 70)
                                .addComponent(txtEliminar)
                                .addGap(62, 62, 62)
                                .addComponent(btnLimpiar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))))
            .addComponent(jTextField1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnVolver2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lblcodigo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboMascotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboVacunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardar)
                            .addComponent(btnModifica)
                            .addComponent(txtEliminar)
                            .addComponent(btnLimpiar))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void tablamedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamedicoMouseClicked
        this.lblcodigo.setText(tablamedico.getValueAt(tablamedico.getSelectedRow(), 0).toString());
        int index = 0;
        index = buscarComboMascotas(tablamedico.getValueAt(tablamedico.getSelectedRow(), 1).toString());
         this.cboMascotas.setSelectedIndex(index);
        index = buscarComboVacunas(tablamedico.getValueAt(tablamedico.getSelectedRow(), 2).toString());
         this.cboVacunas.setSelectedIndex(index);
        index = buscarComboEmpleados(tablamedico.getValueAt(tablamedico.getSelectedRow(), 3).toString());
        this.cboEmpleados.setSelectedIndex(index);
        
        this.txtFecha.setText(tablamedico.getValueAt(tablamedico.getSelectedRow(), 4).toString());
        this.txtMotivo.setText(tablamedico.getValueAt(tablamedico.getSelectedRow(), 5).toString());
    }//GEN-LAST:event_tablamedicoMouseClicked

    private void txtEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEliminarActionPerformed
        boolean delete = true;
        try {
            cargar();
            entihi.setCodHistorial(Integer.parseInt(this.lblcodigo.getText()));
            controlhis.destroy(entihi.getCodHistorial());
        } catch (Exception ex) {
            delete = false;
            JOptionPane.showMessageDialog(this, "Error en eliminar registro : " + ex.getMessage());
        }
        if (delete) {
            limpiar();
            llenarTabla();
            JOptionPane.showMessageDialog(this, "El Registro se elimino con Exito!!!");
        }
    }//GEN-LAST:event_txtEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        boolean save = true;
        try {
            cargar();
            controlhis.create(entihi);
        } catch (Exception ex) {
            save = false;
            JOptionPane.showMessageDialog(this, "Error en almacenar registro : " + ex.getMessage());
        }
        if (save) {
            limpiar();
            llenarTabla();
            JOptionPane.showMessageDialog(this, "El Registro se guardo con Exito!!!");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnModificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificaActionPerformed
        boolean update = true;
        try {
            cargar();
            entihi.setCodHistorial(Integer.parseInt(this.lblcodigo.getText()));
            controlhis.edit(entihi);
        } catch (Exception ex) {
            update = false;
            JOptionPane.showMessageDialog(this, "Error en actualizar registro : " + ex.getMessage());
        }
        if (update) {
            limpiar();
            llenarTabla();
            JOptionPane.showMessageDialog(this, "El Registro se actualizo con Exito!!!");
        }
    }//GEN-LAST:event_btnModificaActionPerformed

    private void cboVacunasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboVacunasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboVacunasActionPerformed

    private void btnVolver2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver2ActionPerformed
        frmMenu menu = new frmMenu();
        menu.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnVolver2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmHistorial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModifica;
    private javax.swing.JButton btnVolver2;
    private javax.swing.JComboBox<String> cboEmpleados;
    private javax.swing.JComboBox<String> cboMascotas;
    private javax.swing.JComboBox<String> cboVacunas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblcodigo;
    private javax.swing.JTable tablamedico;
    private javax.swing.JButton txtEliminar;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtMotivo;
    // End of variables declaration//GEN-END:variables
}
